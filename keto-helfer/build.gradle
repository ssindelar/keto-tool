plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.vaadin' version '0.14.5.1'
}

defaultTasks("clean", "build")

group = 'de.sindelar'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	// Vaadin addons
	maven { url "https://maven.vaadin.com/vaadin-addons" }
}

ext {
	set('vaadinVersion', "14.5.1")
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
	}
}

dependencies {
	implementation('com.vaadin:vaadin-spring-boot-starter') {
//         Webjars are only needed when running in Vaadin 13 compatibility mode
		["com.vaadin.webjar", "org.webjars.bowergithub.insites",
		 "org.webjars.bowergithub.polymer", "org.webjars.bowergithub.polymerelements",
		 "org.webjars.bowergithub.vaadin", "org.webjars.bowergithub.webcomponents"]
				.forEach { group -> exclude(group: group) }
	}
	implementation 'com.google.guava:guava:29.0-jre'
	implementation 'com.wontlost:zxing-vaadin:1.0.1'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	
	implementation project(':shared')
	
	//implementation 'org.vaadin.artur:a-vaadin-helper:1.6.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

vaadin {
	pnpmEnable = true
}

allprojects {
	apply plugin: 'java'
	
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}
	
	repositories {
		mavenCentral()
	}
	
	dependencies {
		implementation 'com.google.guava:guava:29.0-jre'
		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'org.postgresql:postgresql'
		annotationProcessor 'org.projectlombok:lombok'
		
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}
	
	test {
		useJUnitPlatform()
	}
}
